@page "/fetchdata"
@page "/fetchdata/{page:int}"
@using Demo.App.Services
@using X.PagedList;
@using Webdiyer.AspNetCore;

@addTagHelper *,Webdiyer.AspNetCore.BlazorPager
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <BlazorPager ref="blazorPager" CurrentPageIndex="@Page" CurrentPageNumberFormatString="[{0}]" TotalItemCount="@TotalItemCount" OnPageChanged="((p)=>ChangePage(p))" PageSize="@PageSize" NumericPagerItemCssClass="btn btn-primary" NavigationPagerItemCssClass="btn btn-info" RoutePattern="fetchdata/{0}"></BlazorPager>
    <div>Page @Page of @TotalPageCount</div>
}

@functions {
    IPagedList<WeatherForecast> forecasts;

    BlazorPager blazorPager;

    [Parameter]
    int Page { get; set; } = 1;

    int TotalItemCount { get; set; }

    int PageSize { get; set; } = 5;

    int TotalPageCount { get; set; }

    protected override async Task OnInitAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now, Page, PageSize);
        TotalItemCount = forecasts.TotalItemCount;
    }

    async void ChangePage(int pageIndex)
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now, pageIndex, PageSize);
        StateHasChanged();
    }

    protected override void OnAfterRender()
    {
        TotalPageCount = blazorPager.TotalPageCount;
        base.OnAfterRender();
    }
}
